#!/bin/bash
clear
# Start progresbar code
# 1. Create ProgressBar function
# 1.1 Input is currentState($1) and totalState($2)
function ProgressBar {
# Process data
    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done
# Build progressbar string lengths
    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

# 1.2 Build progressbar strings and print the ProgressBar line
# 1.2.1 Output example:                           
# 1.2.1.1 Progress : [########################################] 100%
printf "\rKey ${1} ${3} [${_fill// /#}${_empty// /-}] ${_progress}%%"

}
#end progressbar code
# save funcion
function save {
  echo $"Saving..."
  echo "${value}" > ${devfile}
}
trap save EXIT
# get the current device name
devices=(`fastboot devices`);
device=${devices[0]}
echo "Current device: $device"
# Naming the persistent file:
devfile="./${device}.dat"
# if we don't have a file, start at 1000000000000000
if [ ! -f $devfile ] ; then
	value=1000000000000000
# otherwise read the value from the file
else
	value=`cat ${devfile}`
fi

while true
do
	# show it to the user
	output=($((fastboot oem unlock ${value}) 2>&1))
	if [[ "${output[1]}" != *"FAILED"* ]]; then
		echo "Your unlock code is: ${value}"
		break
	fi
	#echo -ne "Trying key ${value}"\\r
	ProgressBar ${value} 99999999999999999 ${output[1]}
	# increment the value
	value=$((value+1));
done;
